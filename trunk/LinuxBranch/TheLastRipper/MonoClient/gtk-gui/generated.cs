// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.42
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace Stetic {
    
    
    internal class Gui {
        
        public static void Build(object obj, System.Type type) {
            Stetic.Gui.Build(obj, type.FullName);
        }
        
        public static void Build(object obj, string id) {
            System.Collections.Hashtable bindings = new System.Collections.Hashtable();
            if ((id == "MainWindow")) {
                Gtk.Window cobj = ((Gtk.Window)(obj));
                // Widget MainWindow
                cobj.Title = "TheLastRipper";
                Gtk.UIManager w1 = new Gtk.UIManager();
                Gtk.ActionGroup w2 = new Gtk.ActionGroup("Default");
                Gtk.Action w3 = new Gtk.Action("File", "_File", null, null);
                w3.ShortLabel = "File";
                bindings["File"] = w3;
                w2.Add(w3, null);
                Gtk.Action w4 = new Gtk.Action("Preferences", "_Preferences", null, "gtk-preferences");
                w4.ShortLabel = "Preferences";
                bindings["Preferences"] = w4;
                w2.Add(w4, null);
                Gtk.Action w5 = new Gtk.Action("Exit", "Exit", null, "gtk-quit");
                w5.ShortLabel = "Exit";
                bindings["Exit"] = w5;
                w2.Add(w5, null);
                Gtk.Action w6 = new Gtk.Action("GeneratePlaylist", "Generate playli_st", "Saves playlist as defined in perferences", "gtk-refresh");
                w6.ShortLabel = "Generate playlist";
                bindings["GeneratePlaylist"] = w6;
                w2.Add(w6, "<Control><Mod2>s");
                Gtk.Action w7 = new Gtk.Action("Help", "_Help", "", null);
                w7.ShortLabel = "Help";
                bindings["Help"] = w7;
                w2.Add(w7, null);
                Gtk.Action w8 = new Gtk.Action("OnlineHelp", "Online _help", "Find help online", "gtk-help");
                w8.ShortLabel = "Online help";
                bindings["OnlineHelp"] = w8;
                w2.Add(w8, "<Mod2>F11");
                Gtk.Action w9 = new Gtk.Action("About", "_About", null, "gtk-about");
                w9.ShortLabel = "About";
                bindings["About"] = w9;
                w2.Add(w9, null);
                Gtk.Action w10 = new Gtk.Action("LegalNotice", "_Legal notice", null, "gnome-stock-attach");
                w10.ShortLabel = "Legal notice";
                bindings["LegalNotice"] = w10;
                w2.Add(w10, null);
                w1.InsertActionGroup(w2, 0);
                cobj.AddAccelGroup(w1.AccelGroup);
                cobj.Icon = Gdk.Pixbuf.LoadFromResource("logo.svg");
                cobj.WindowPosition = ((Gtk.WindowPosition)(4));
                cobj.Events = ((Gdk.EventMask)(0));
                cobj.Name = "MainWindow";
                // Container child MainWindow.Gtk.Container+ContainerChild
                Gtk.VBox w11 = new Gtk.VBox();
                w11.Events = ((Gdk.EventMask)(0));
                w11.Name = "vbox4";
                // Container child vbox4.Gtk.Box+BoxChild
                w1.AddUiFromString("<ui><menubar name='menubar4'><menu action='File'><menuitem action='Preferences'/><menuitem action='GeneratePlaylist'/><separator/><menuitem action='Exit'/></menu><menu action='Help'><menuitem action='LegalNotice'/><menuitem action='OnlineHelp'/><separator/><menuitem action='About'/></menu></menubar></ui>");
                Gtk.MenuBar w12 = ((Gtk.MenuBar)(w1.GetWidget("/menubar4")));
                w12.Events = ((Gdk.EventMask)(0));
                w12.Name = "menubar4";
                bindings["menubar4"] = w12;
                w11.Add(w12);
                Gtk.Box.BoxChild w13 = ((Gtk.Box.BoxChild)(w11[w12]));
                w13.Position = 0;
                w13.Expand = false;
                w13.Fill = false;
                // Container child vbox4.Gtk.Box+BoxChild
                Gtk.Frame w14 = new Gtk.Frame();
                w14.ShadowType = ((Gtk.ShadowType)(0));
                w14.LabelXalign = 0F;
                w14.Events = ((Gdk.EventMask)(0));
                w14.Name = "frame5";
                // Container child frame5.Gtk.Container+ContainerChild
                Gtk.Alignment w15 = new Gtk.Alignment(0F, 0F, 1F, 1F);
                w15.LeftPadding = ((uint)(12));
                w15.Events = ((Gdk.EventMask)(0));
                w15.Name = "GtkAlignment1";
                // Container child GtkAlignment1.Gtk.Container+ContainerChild
                Gtk.VBox w16 = new Gtk.VBox();
                w16.Events = ((Gdk.EventMask)(0));
                w16.Name = "vbox6";
                // Container child vbox6.Gtk.Box+BoxChild
                Gtk.ComboBoxEntry w17 = Gtk.ComboBoxEntry.NewText();
                w17.AppendText("lastfm://globaltags/rock");
                w17.AppendText("lastfm://globaltags/indie");
                w17.AppendText("lastfm://globaltags/alternative");
                w17.AppendText("lastfm://globaltags/seen%20live");
                w17.AppendText("lastfm://globaltags/metal");
                w17.AppendText("lastfm://globaltags/electronic");
                w17.AppendText("lastfm://globaltags/pop");
                w17.AppendText("lastfm://globaltags/punk");
                w17.AppendText("lastfm://globaltags/indie%20rock");
                w17.AppendText("lastfm://globaltags/classic%20rock");
                w17.Events = ((Gdk.EventMask)(0));
                w17.Name = "LastFMStationEntry";
                w17.Sensitive = false;
                bindings["LastFMStationEntry"] = w17;
                w16.Add(w17);
                Gtk.Box.BoxChild w18 = ((Gtk.Box.BoxChild)(w16[w17]));
                w18.Position = 0;
                w18.Expand = false;
                // Container child vbox6.Gtk.Box+BoxChild
                Gtk.HBox w19 = new Gtk.HBox();
                w19.Events = ((Gdk.EventMask)(0));
                w19.Name = "hbox1";
                // Container child hbox1.Gtk.Box+BoxChild
                Gtk.Button w20 = new Gtk.Button();
                w20.CanFocus = true;
                w20.Events = ((Gdk.EventMask)(0));
                w20.Name = "ConnectButton";
                w20.Sensitive = false;
                // Container child ConnectButton.Gtk.Container+ContainerChild
                Gtk.Alignment w21 = new Gtk.Alignment(0.5F, 0.5F, 0F, 0F);
                w21.Events = ((Gdk.EventMask)(0));
                w21.Name = "GtkAlignment";
                // Container child GtkAlignment.Gtk.Container+ContainerChild
                Gtk.HBox w22 = new Gtk.HBox();
                w22.Spacing = 2;
                w22.Events = ((Gdk.EventMask)(0));
                w22.Name = "GtkHBox";
                // Container child GtkHBox.Gtk.Container+ContainerChild
                Gtk.Image w23 = new Gtk.Image();
                w23.Pixbuf = Gtk.IconTheme.Default.LoadIcon("stock_media-play", 16, 0);
                w23.Events = ((Gdk.EventMask)(0));
                w23.Name = "image2";
                bindings["image2"] = w23;
                w22.Add(w23);
                // Container child GtkHBox.Gtk.Container+ContainerChild
                Gtk.Label w25 = new Gtk.Label();
                w25.LabelProp = "Tune in";
                w25.Events = ((Gdk.EventMask)(0));
                w25.Name = "GtkLabel";
                bindings["GtkLabel"] = w25;
                w22.Add(w25);
                bindings["GtkHBox"] = w22;
                w21.Add(w22);
                bindings["GtkAlignment"] = w21;
                w20.Add(w21);
                bindings["ConnectButton"] = w20;
                w19.Add(w20);
                Gtk.Box.BoxChild w29 = ((Gtk.Box.BoxChild)(w19[w20]));
                w29.Position = 0;
                w29.Expand = false;
                w29.Fill = false;
                // Container child hbox1.Gtk.Box+BoxChild
                Gtk.Button w30 = new Gtk.Button();
                w30.UseUnderline = true;
                w30.CanFocus = true;
                w30.Events = ((Gdk.EventMask)(0));
                w30.Name = "SkipButton";
                w30.Sensitive = false;
                // Container child SkipButton.Gtk.Container+ContainerChild
                Gtk.Alignment w31 = new Gtk.Alignment(0.5F, 0.5F, 0F, 0F);
                w31.Events = ((Gdk.EventMask)(0));
                w31.Name = "GtkAlignment";
                // Container child GtkAlignment.Gtk.Container+ContainerChild
                Gtk.HBox w32 = new Gtk.HBox();
                w32.Spacing = 2;
                w32.Events = ((Gdk.EventMask)(0));
                w32.Name = "GtkHBox";
                // Container child GtkHBox.Gtk.Container+ContainerChild
                Gtk.Image w33 = new Gtk.Image();
                w33.Pixbuf = Gtk.IconTheme.Default.LoadIcon("stock_media-next", 16, 0);
                w33.Events = ((Gdk.EventMask)(0));
                w33.Name = "image3";
                bindings["image3"] = w33;
                w32.Add(w33);
                // Container child GtkHBox.Gtk.Container+ContainerChild
                Gtk.Label w35 = new Gtk.Label();
                w35.LabelProp = "Skip";
                w35.UseUnderline = true;
                w35.Events = ((Gdk.EventMask)(0));
                w35.Name = "GtkLabel";
                bindings["GtkLabel"] = w35;
                w32.Add(w35);
                bindings["GtkHBox"] = w32;
                w31.Add(w32);
                bindings["GtkAlignment"] = w31;
                w30.Add(w31);
                bindings["SkipButton"] = w30;
                w19.Add(w30);
                Gtk.Box.BoxChild w39 = ((Gtk.Box.BoxChild)(w19[w30]));
                w39.Position = 1;
                w39.Expand = false;
                w39.Fill = false;
                // Container child hbox1.Gtk.Box+BoxChild
                Gtk.Button w40 = new Gtk.Button();
                w40.CanFocus = true;
                w40.Events = ((Gdk.EventMask)(0));
                w40.Name = "LoveButton";
                w40.Sensitive = false;
                // Container child LoveButton.Gtk.Container+ContainerChild
                Gtk.Alignment w41 = new Gtk.Alignment(0.5F, 0.5F, 0F, 0F);
                w41.Events = ((Gdk.EventMask)(0));
                w41.Name = "GtkAlignment";
                // Container child GtkAlignment.Gtk.Container+ContainerChild
                Gtk.HBox w42 = new Gtk.HBox();
                w42.Spacing = 2;
                w42.Events = ((Gdk.EventMask)(0));
                w42.Name = "GtkHBox";
                // Container child GtkHBox.Gtk.Container+ContainerChild
                Gtk.Image w43 = new Gtk.Image();
                w43.Pixbuf = Gtk.IconTheme.Default.LoadIcon("stock_3d-favourites", 16, 0);
                w43.Events = ((Gdk.EventMask)(0));
                w43.Name = "image4";
                bindings["image4"] = w43;
                w42.Add(w43);
                // Container child GtkHBox.Gtk.Container+ContainerChild
                Gtk.Label w45 = new Gtk.Label();
                w45.LabelProp = "Love";
                w45.Events = ((Gdk.EventMask)(0));
                w45.Name = "GtkLabel";
                bindings["GtkLabel"] = w45;
                w42.Add(w45);
                bindings["GtkHBox"] = w42;
                w41.Add(w42);
                bindings["GtkAlignment"] = w41;
                w40.Add(w41);
                bindings["LoveButton"] = w40;
                w19.Add(w40);
                Gtk.Box.BoxChild w49 = ((Gtk.Box.BoxChild)(w19[w40]));
                w49.Position = 2;
                w49.Expand = false;
                w49.Fill = false;
                // Container child hbox1.Gtk.Box+BoxChild
                Gtk.Button w50 = new Gtk.Button();
                w50.CanFocus = true;
                w50.Events = ((Gdk.EventMask)(0));
                w50.Name = "BanButton";
                w50.Sensitive = false;
                // Container child BanButton.Gtk.Container+ContainerChild
                Gtk.Alignment w51 = new Gtk.Alignment(0.5F, 0.5F, 0F, 0F);
                w51.Events = ((Gdk.EventMask)(0));
                w51.Name = "GtkAlignment";
                // Container child GtkAlignment.Gtk.Container+ContainerChild
                Gtk.HBox w52 = new Gtk.HBox();
                w52.Spacing = 2;
                w52.Events = ((Gdk.EventMask)(0));
                w52.Name = "GtkHBox";
                // Container child GtkHBox.Gtk.Container+ContainerChild
                Gtk.Image w53 = new Gtk.Image();
                w53.Pixbuf = Gtk.IconTheme.Default.LoadIcon("gtk-remove", 16, 0);
                w53.Events = ((Gdk.EventMask)(0));
                w53.Name = "image5";
                bindings["image5"] = w53;
                w52.Add(w53);
                // Container child GtkHBox.Gtk.Container+ContainerChild
                Gtk.Label w55 = new Gtk.Label();
                w55.LabelProp = "Ban";
                w55.Events = ((Gdk.EventMask)(0));
                w55.Name = "GtkLabel";
                bindings["GtkLabel"] = w55;
                w52.Add(w55);
                bindings["GtkHBox"] = w52;
                w51.Add(w52);
                bindings["GtkAlignment"] = w51;
                w50.Add(w51);
                bindings["BanButton"] = w50;
                w19.Add(w50);
                Gtk.Box.BoxChild w59 = ((Gtk.Box.BoxChild)(w19[w50]));
                w59.Position = 3;
                w59.Expand = false;
                w59.Fill = false;
                bindings["hbox1"] = w19;
                w16.Add(w19);
                Gtk.Box.BoxChild w60 = ((Gtk.Box.BoxChild)(w16[w19]));
                w60.PackType = ((Gtk.PackType)(1));
                w60.Position = 1;
                w60.Expand = false;
                bindings["vbox6"] = w16;
                w15.Add(w16);
                bindings["GtkAlignment1"] = w15;
                w14.Add(w15);
                Gtk.Label w63 = new Gtk.Label();
                w63.LabelProp = "<b>Last.FM Station</b>";
                w63.UseMarkup = true;
                w63.Events = ((Gdk.EventMask)(256));
                w63.Name = "GtkLabel6";
                bindings["GtkLabel6"] = w63;
                w14.LabelWidget = w63;
                bindings["frame5"] = w14;
                w11.Add(w14);
                Gtk.Box.BoxChild w64 = ((Gtk.Box.BoxChild)(w11[w14]));
                w64.Position = 1;
                w64.Expand = false;
                // Container child vbox4.Gtk.Box+BoxChild
                Gtk.Frame w65 = new Gtk.Frame();
                w65.ShadowType = ((Gtk.ShadowType)(0));
                w65.LabelXalign = 0F;
                w65.Events = ((Gdk.EventMask)(0));
                w65.Name = "frame6";
                // Container child frame6.Gtk.Container+ContainerChild
                Gtk.Alignment w66 = new Gtk.Alignment(0F, 0F, 1F, 1F);
                w66.LeftPadding = ((uint)(12));
                w66.Events = ((Gdk.EventMask)(0));
                w66.Name = "GtkAlignment2";
                // Container child GtkAlignment2.Gtk.Container+ContainerChild
                Gtk.VBox w67 = new Gtk.VBox();
                w67.Events = ((Gdk.EventMask)(0));
                w67.Name = "vbox8";
                // Container child vbox8.Gtk.Box+BoxChild
                Gtk.HBox w68 = new Gtk.HBox();
                w68.Events = ((Gdk.EventMask)(0));
                w68.Name = "hbox5";
                // Container child hbox5.Gtk.Box+BoxChild
                Gtk.Label w69 = new Gtk.Label();
                w69.LabelProp = "Not Recording";
                w69.UseMarkup = true;
                w69.Xalign = 0F;
                w69.Events = ((Gdk.EventMask)(0));
                w69.Name = "StatusLabel";
                bindings["StatusLabel"] = w69;
                w68.Add(w69);
                Gtk.Box.BoxChild w70 = ((Gtk.Box.BoxChild)(w68[w69]));
                w70.Position = 0;
                // Container child hbox5.Gtk.Box+BoxChild
                Gtk.Image w71 = new Gtk.Image();
                w71.Pixbuf = Gtk.IconTheme.Default.LoadIcon("gtk-cdrom", 16, 0);
                w71.Events = ((Gdk.EventMask)(0));
                w71.Name = "CoverBox";
                bindings["CoverBox"] = w71;
                w68.Add(w71);
                Gtk.Box.BoxChild w72 = ((Gtk.Box.BoxChild)(w68[w71]));
                w72.Position = 1;
                w72.Expand = false;
                w72.Fill = false;
                bindings["hbox5"] = w68;
                w67.Add(w68);
                Gtk.Box.BoxChild w73 = ((Gtk.Box.BoxChild)(w67[w68]));
                w73.Position = 0;
                w73.Expand = false;
                // Container child vbox8.Gtk.Box+BoxChild
                Gtk.ProgressBar w74 = new Gtk.ProgressBar();
                w74.Events = ((Gdk.EventMask)(0));
                w74.Name = "SongProgressBar";
                bindings["SongProgressBar"] = w74;
                w67.Add(w74);
                Gtk.Box.BoxChild w75 = ((Gtk.Box.BoxChild)(w67[w74]));
                w75.Position = 1;
                w75.Expand = false;
                bindings["vbox8"] = w67;
                w66.Add(w67);
                bindings["GtkAlignment2"] = w66;
                w65.Add(w66);
                Gtk.Label w78 = new Gtk.Label();
                w78.LabelProp = "<b>Currently recording</b>";
                w78.UseMarkup = true;
                w78.Events = ((Gdk.EventMask)(256));
                w78.Name = "GtkLabel5";
                bindings["GtkLabel5"] = w78;
                w65.LabelWidget = w78;
                bindings["frame6"] = w65;
                w11.Add(w65);
                Gtk.Box.BoxChild w79 = ((Gtk.Box.BoxChild)(w11[w65]));
                w79.Position = 2;
                bindings["vbox4"] = w11;
                cobj.Add(w11);
                cobj.DefaultWidth = 272;
                cobj.DefaultHeight = 185;
                bindings["MainWindow"] = cobj;
                w12.Show();
                w17.Show();
                w23.Show();
                w25.Show();
                w22.Show();
                w21.Show();
                w20.Show();
                w33.Show();
                w35.Show();
                w32.Show();
                w31.Show();
                w30.Show();
                w43.Show();
                w45.Show();
                w42.Show();
                w41.Show();
                w40.Show();
                w53.Show();
                w55.Show();
                w52.Show();
                w51.Show();
                w50.Show();
                w19.Show();
                w16.Show();
                w15.Show();
                w63.Show();
                w14.Show();
                w69.Show();
                w71.Show();
                w68.Show();
                w74.Show();
                w67.Show();
                w66.Show();
                w78.Show();
                w65.Show();
                w11.Show();
                cobj.Show();
                cobj.DeleteEvent += ((Gtk.DeleteEventHandler)(System.Delegate.CreateDelegate(typeof(Gtk.DeleteEventHandler), cobj, "OnDeleteEvent")));
                w4.Activated += ((System.EventHandler)(System.Delegate.CreateDelegate(typeof(System.EventHandler), cobj, "OnPreferencesActivated")));
                w5.Activated += ((System.EventHandler)(System.Delegate.CreateDelegate(typeof(System.EventHandler), cobj, "OnExitActivated")));
                w8.Activated += ((System.EventHandler)(System.Delegate.CreateDelegate(typeof(System.EventHandler), cobj, "OnOnlineHelpActivated")));
                w9.Activated += ((System.EventHandler)(System.Delegate.CreateDelegate(typeof(System.EventHandler), cobj, "OnAboutActivated")));
                w10.Activated += ((System.EventHandler)(System.Delegate.CreateDelegate(typeof(System.EventHandler), cobj, "OnLegalNoticeActivated")));
                w20.Clicked += ((System.EventHandler)(System.Delegate.CreateDelegate(typeof(System.EventHandler), cobj, "OnConnectButtonClicked")));
                w30.Clicked += ((System.EventHandler)(System.Delegate.CreateDelegate(typeof(System.EventHandler), cobj, "OnSkipButtonClicked")));
                w40.Clicked += ((System.EventHandler)(System.Delegate.CreateDelegate(typeof(System.EventHandler), cobj, "OnLoveButtonClicked")));
                w50.Clicked += ((System.EventHandler)(System.Delegate.CreateDelegate(typeof(System.EventHandler), cobj, "OnBanButtonClicked")));
            }
            else {
                if ((id == "MonoClient.Preferences")) {
                    Gtk.Dialog cobj = ((Gtk.Dialog)(obj));
                    // Widget MonoClient.Preferences
                    cobj.Title = "Preferences";
                    cobj.Icon = Gtk.IconTheme.Default.LoadIcon("gtk-preferences", 16, 0);
                    cobj.WindowPosition = ((Gtk.WindowPosition)(4));
                    cobj.Modal = true;
                    cobj.HasSeparator = false;
                    cobj.Events = ((Gdk.EventMask)(256));
                    cobj.Name = "MonoClient.Preferences";
                    // Internal child MonoClient.Preferences.VBox
                    Gtk.VBox w1 = cobj.VBox;
                    w1.BorderWidth = ((uint)(2));
                    w1.Events = ((Gdk.EventMask)(256));
                    w1.Name = "dialog_VBox";
                    // Container child dialog_VBox.Gtk.Box+BoxChild
                    Gtk.Notebook w2 = new Gtk.Notebook();
                    w2.CanFocus = true;
                    w2.Events = ((Gdk.EventMask)(0));
                    w2.Name = "notebook1";
                    // Container child notebook1.Gtk.Notebook+NotebookChild
                    Gtk.VBox w3 = new Gtk.VBox();
                    w3.Events = ((Gdk.EventMask)(0));
                    w3.Name = "vbox4";
                    // Container child vbox4.Gtk.Box+BoxChild
                    Gtk.Frame w4 = new Gtk.Frame();
                    w4.ShadowType = ((Gtk.ShadowType)(0));
                    w4.LabelXalign = 0F;
                    w4.Events = ((Gdk.EventMask)(0));
                    w4.Name = "LoginFrame";
                    w4.Sensitive = false;
                    // Container child LoginFrame.Gtk.Container+ContainerChild
                    Gtk.Alignment w5 = new Gtk.Alignment(0F, 0F, 1F, 1F);
                    w5.LeftPadding = ((uint)(12));
                    w5.Events = ((Gdk.EventMask)(0));
                    w5.Name = "GtkAlignment14";
                    // Container child GtkAlignment14.Gtk.Container+ContainerChild
                    Gtk.Table w6 = new Gtk.Table(((uint)(3)), ((uint)(2)), false);
                    w6.Events = ((Gdk.EventMask)(0));
                    w6.Name = "table1";
                    // Container child table1.Gtk.Table+TableChild
                    Gtk.Button w7 = new Gtk.Button();
                    w7.CanFocus = true;
                    w7.Events = ((Gdk.EventMask)(0));
                    w7.Name = "LoginButton";
                    // Container child LoginButton.Gtk.Container+ContainerChild
                    Gtk.Alignment w8 = new Gtk.Alignment(0.5F, 0.5F, 0F, 0F);
                    w8.Events = ((Gdk.EventMask)(0));
                    w8.Name = "GtkAlignment";
                    // Container child GtkAlignment.Gtk.Container+ContainerChild
                    Gtk.HBox w9 = new Gtk.HBox();
                    w9.Spacing = 2;
                    w9.Events = ((Gdk.EventMask)(0));
                    w9.Name = "GtkHBox";
                    // Container child GtkHBox.Gtk.Container+ContainerChild
                    Gtk.Image w10 = new Gtk.Image();
                    w10.Pixbuf = Gtk.IconTheme.Default.LoadIcon("gtk-apply", 16, 0);
                    w10.Events = ((Gdk.EventMask)(0));
                    w10.Name = "image6";
                    bindings["image6"] = w10;
                    w9.Add(w10);
                    // Container child GtkHBox.Gtk.Container+ContainerChild
                    Gtk.Label w12 = new Gtk.Label();
                    w12.LabelProp = "Login";
                    w12.Events = ((Gdk.EventMask)(0));
                    w12.Name = "GtkLabel";
                    bindings["GtkLabel"] = w12;
                    w9.Add(w12);
                    bindings["GtkHBox"] = w9;
                    w8.Add(w9);
                    bindings["GtkAlignment"] = w8;
                    w7.Add(w8);
                    bindings["LoginButton"] = w7;
                    w6.Add(w7);
                    Gtk.Table.TableChild w16 = ((Gtk.Table.TableChild)(w6[w7]));
                    w16.BottomAttach = ((uint)(3));
                    w16.TopAttach = ((uint)(2));
                    w16.YOptions = ((Gtk.AttachOptions)(4));
                    w16.XOptions = ((Gtk.AttachOptions)(4));
                    // Container child table1.Gtk.Table+TableChild
                    Gtk.Label w17 = new Gtk.Label();
                    w17.LabelProp = "Password: ";
                    w17.Xalign = 0F;
                    w17.Events = ((Gdk.EventMask)(0));
                    w17.Name = "label4";
                    bindings["label4"] = w17;
                    w6.Add(w17);
                    Gtk.Table.TableChild w18 = ((Gtk.Table.TableChild)(w6[w17]));
                    w18.BottomAttach = ((uint)(2));
                    w18.TopAttach = ((uint)(1));
                    w18.YOptions = ((Gtk.AttachOptions)(4));
                    w18.XOptions = ((Gtk.AttachOptions)(4));
                    // Container child table1.Gtk.Table+TableChild
                    Gtk.Label w19 = new Gtk.Label();
                    w19.LabelProp = "Username: ";
                    w19.Xalign = 0F;
                    w19.Events = ((Gdk.EventMask)(0));
                    w19.Name = "label5";
                    bindings["label5"] = w19;
                    w6.Add(w19);
                    Gtk.Table.TableChild w20 = ((Gtk.Table.TableChild)(w6[w19]));
                    w20.YOptions = ((Gtk.AttachOptions)(4));
                    w20.XOptions = ((Gtk.AttachOptions)(4));
                    // Container child table1.Gtk.Table+TableChild
                    Gtk.Entry w21 = new Gtk.Entry();
                    w21.IsEditable = true;
                    w21.Visibility = false;
                    w21.InvisibleChar = '●';
                    w21.CanFocus = true;
                    w21.Events = ((Gdk.EventMask)(0));
                    w21.Name = "PasswordEntry";
                    bindings["PasswordEntry"] = w21;
                    w6.Add(w21);
                    Gtk.Table.TableChild w22 = ((Gtk.Table.TableChild)(w6[w21]));
                    w22.BottomAttach = ((uint)(2));
                    w22.LeftAttach = ((uint)(1));
                    w22.RightAttach = ((uint)(2));
                    w22.TopAttach = ((uint)(1));
                    w22.YOptions = ((Gtk.AttachOptions)(4));
                    // Container child table1.Gtk.Table+TableChild
                    Gtk.VBox w23 = new Gtk.VBox();
                    w23.Events = ((Gdk.EventMask)(0));
                    w23.Name = "vbox5";
                    // Container child vbox5.Gtk.Box+BoxChild
                    Gtk.CheckButton w24 = new Gtk.CheckButton();
                    w24.Label = "Remember password";
                    w24.DrawIndicator = true;
                    w24.CanFocus = true;
                    w24.Events = ((Gdk.EventMask)(0));
                    w24.Name = "SaveLogincheckbutton";
                    bindings["SaveLogincheckbutton"] = w24;
                    w23.Add(w24);
                    Gtk.Box.BoxChild w25 = ((Gtk.Box.BoxChild)(w23[w24]));
                    w25.Position = 0;
                    w25.Expand = false;
                    w25.Fill = false;
                    bindings["vbox5"] = w23;
                    w6.Add(w23);
                    Gtk.Table.TableChild w26 = ((Gtk.Table.TableChild)(w6[w23]));
                    w26.BottomAttach = ((uint)(3));
                    w26.LeftAttach = ((uint)(1));
                    w26.RightAttach = ((uint)(2));
                    w26.TopAttach = ((uint)(2));
                    w26.YOptions = ((Gtk.AttachOptions)(4));
                    w26.XOptions = ((Gtk.AttachOptions)(4));
                    // Container child table1.Gtk.Table+TableChild
                    Gtk.Entry w27 = new Gtk.Entry();
                    w27.IsEditable = true;
                    w27.InvisibleChar = '●';
                    w27.CanFocus = true;
                    w27.Events = ((Gdk.EventMask)(0));
                    w27.Name = "UserNameEntry";
                    bindings["UserNameEntry"] = w27;
                    w6.Add(w27);
                    Gtk.Table.TableChild w28 = ((Gtk.Table.TableChild)(w6[w27]));
                    w28.LeftAttach = ((uint)(1));
                    w28.RightAttach = ((uint)(2));
                    w28.YOptions = ((Gtk.AttachOptions)(4));
                    w28.XOptions = ((Gtk.AttachOptions)(4));
                    bindings["table1"] = w6;
                    w5.Add(w6);
                    bindings["GtkAlignment14"] = w5;
                    w4.Add(w5);
                    Gtk.Label w31 = new Gtk.Label();
                    w31.LabelProp = "<b>Login</b>";
                    w31.UseMarkup = true;
                    w31.Events = ((Gdk.EventMask)(256));
                    w31.Name = "GtkLabel24";
                    bindings["GtkLabel24"] = w31;
                    w4.LabelWidget = w31;
                    bindings["LoginFrame"] = w4;
                    w3.Add(w4);
                    Gtk.Box.BoxChild w32 = ((Gtk.Box.BoxChild)(w3[w4]));
                    w32.Position = 0;
                    w32.Expand = false;
                    w32.Fill = false;
                    // Container child vbox4.Gtk.Box+BoxChild
                    Gtk.Label w33 = new Gtk.Label();
                    w33.LabelProp = "Please login and set the Music directory before you preceed.";
                    w33.Wrap = true;
                    w33.Xalign = 0F;
                    w33.Events = ((Gdk.EventMask)(0));
                    w33.Name = "label6";
                    bindings["label6"] = w33;
                    w3.Add(w33);
                    Gtk.Box.BoxChild w34 = ((Gtk.Box.BoxChild)(w3[w33]));
                    w34.Position = 1;
                    w34.Expand = false;
                    bindings["vbox4"] = w3;
                    w2.Add(w3);
                    Gtk.Notebook.NotebookChild w35 = ((Gtk.Notebook.NotebookChild)(w2[w3]));
                    w35.TabExpand = false;
                    // Notebook tab
                    Gtk.Label w36 = new Gtk.Label();
                    w36.LabelProp = "User preferences";
                    w36.Events = ((Gdk.EventMask)(0));
                    w36.Name = "label3";
                    bindings["label3"] = w36;
                    w2.SetTabLabel(w3, w36);
                    // Container child notebook1.Gtk.Notebook+NotebookChild
                    Gtk.FileChooserWidget w37 = new Gtk.FileChooserWidget(((Gtk.FileChooserAction)(2)));
                    w37.Events = ((Gdk.EventMask)(0));
                    w37.Name = "MusicPathChooser";
                    bindings["MusicPathChooser"] = w37;
                    w2.Add(w37);
                    Gtk.Notebook.NotebookChild w38 = ((Gtk.Notebook.NotebookChild)(w2[w37]));
                    w38.Position = 1;
                    w38.TabExpand = false;
                    // Notebook tab
                    Gtk.Label w39 = new Gtk.Label();
                    w39.LabelProp = "Music directory";
                    w39.Events = ((Gdk.EventMask)(0));
                    w39.Name = "label1";
                    bindings["label1"] = w39;
                    w2.SetTabLabel(w37, w39);
                    // Container child notebook1.Gtk.Notebook+NotebookChild
                    Gtk.HBox w40 = new Gtk.HBox();
                    w40.Events = ((Gdk.EventMask)(0));
                    w40.Name = "hbox1";
                    // Container child hbox1.Gtk.Box+BoxChild
                    Gtk.Frame w41 = new Gtk.Frame();
                    w41.ShadowType = ((Gtk.ShadowType)(0));
                    w41.LabelXalign = 0F;
                    w41.Events = ((Gdk.EventMask)(0));
                    w41.Name = "frame5";
                    // Container child frame5.Gtk.Container+ContainerChild
                    Gtk.Alignment w42 = new Gtk.Alignment(0F, 0F, 1F, 1F);
                    w42.LeftPadding = ((uint)(12));
                    w42.Events = ((Gdk.EventMask)(0));
                    w42.Name = "GtkAlignment12";
                    // Container child GtkAlignment12.Gtk.Container+ContainerChild
                    Gtk.VBox w43 = new Gtk.VBox();
                    w43.Events = ((Gdk.EventMask)(0));
                    w43.Name = "vbox3";
                    // Container child vbox3.Gtk.Box+BoxChild
                    Gtk.CheckButton w44 = new Gtk.CheckButton();
                    w44.Label = "Top tracks";
                    w44.DrawIndicator = true;
                    w44.CanFocus = true;
                    w44.Events = ((Gdk.EventMask)(0));
                    w44.Name = "TopTrackscheckbutton";
                    bindings["TopTrackscheckbutton"] = w44;
                    w43.Add(w44);
                    Gtk.Box.BoxChild w45 = ((Gtk.Box.BoxChild)(w43[w44]));
                    w45.Position = 0;
                    w45.Expand = false;
                    w45.Fill = false;
                    // Container child vbox3.Gtk.Box+BoxChild
                    Gtk.CheckButton w46 = new Gtk.CheckButton();
                    w46.Label = "Recent loved tracks";
                    w46.DrawIndicator = true;
                    w46.CanFocus = true;
                    w46.Events = ((Gdk.EventMask)(0));
                    w46.Name = "Lovedcheckbutton";
                    bindings["Lovedcheckbutton"] = w46;
                    w43.Add(w46);
                    Gtk.Box.BoxChild w47 = ((Gtk.Box.BoxChild)(w43[w46]));
                    w47.Position = 1;
                    w47.Expand = false;
                    w47.Fill = false;
                    // Container child vbox3.Gtk.Box+BoxChild
                    Gtk.CheckButton w48 = new Gtk.CheckButton();
                    w48.Label = "Weekly track chart";
                    w48.DrawIndicator = true;
                    w48.CanFocus = true;
                    w48.Events = ((Gdk.EventMask)(0));
                    w48.Name = "Weekcheckbutton";
                    bindings["Weekcheckbutton"] = w48;
                    w43.Add(w48);
                    Gtk.Box.BoxChild w49 = ((Gtk.Box.BoxChild)(w43[w48]));
                    w49.Position = 2;
                    w49.Expand = false;
                    w49.Fill = false;
                    // Container child vbox3.Gtk.Box+BoxChild
                    Gtk.CheckButton w50 = new Gtk.CheckButton();
                    w50.Label = "Top tracks mixed";
                    w50.DrawIndicator = true;
                    w50.CanFocus = true;
                    w50.Events = ((Gdk.EventMask)(0));
                    w50.Name = "TopTracksMixcheckbutton";
                    bindings["TopTracksMixcheckbutton"] = w50;
                    w43.Add(w50);
                    Gtk.Box.BoxChild w51 = ((Gtk.Box.BoxChild)(w43[w50]));
                    w51.Position = 3;
                    w51.Expand = false;
                    w51.Fill = false;
                    // Container child vbox3.Gtk.Box+BoxChild
                    Gtk.CheckButton w52 = new Gtk.CheckButton();
                    w52.Label = "Recent loved tracks mixed";
                    w52.DrawIndicator = true;
                    w52.CanFocus = true;
                    w52.Events = ((Gdk.EventMask)(0));
                    w52.Name = "LovedMixcheckbutton";
                    bindings["LovedMixcheckbutton"] = w52;
                    w43.Add(w52);
                    Gtk.Box.BoxChild w53 = ((Gtk.Box.BoxChild)(w43[w52]));
                    w53.Position = 4;
                    w53.Expand = false;
                    w53.Fill = false;
                    // Container child vbox3.Gtk.Box+BoxChild
                    Gtk.CheckButton w54 = new Gtk.CheckButton();
                    w54.Label = "Weekly track chart mixed";
                    w54.DrawIndicator = true;
                    w54.CanFocus = true;
                    w54.Events = ((Gdk.EventMask)(0));
                    w54.Name = "WeekMixcheckbutton";
                    bindings["WeekMixcheckbutton"] = w54;
                    w43.Add(w54);
                    Gtk.Box.BoxChild w55 = ((Gtk.Box.BoxChild)(w43[w54]));
                    w55.Position = 5;
                    w55.Expand = false;
                    w55.Fill = false;
                    // Container child vbox3.Gtk.Box+BoxChild
                    Gtk.CheckButton w56 = new Gtk.CheckButton();
                    w56.Label = "All tracks mixed";
                    w56.DrawIndicator = true;
                    w56.CanFocus = true;
                    w56.Events = ((Gdk.EventMask)(0));
                    w56.Name = "AllMixcheckbutton";
                    bindings["AllMixcheckbutton"] = w56;
                    w43.Add(w56);
                    Gtk.Box.BoxChild w57 = ((Gtk.Box.BoxChild)(w43[w56]));
                    w57.Position = 6;
                    w57.Expand = false;
                    w57.Fill = false;
                    bindings["vbox3"] = w43;
                    w42.Add(w43);
                    bindings["GtkAlignment12"] = w42;
                    w41.Add(w42);
                    Gtk.Label w60 = new Gtk.Label();
                    w60.LabelProp = "<b>Playlists</b>";
                    w60.UseMarkup = true;
                    w60.Events = ((Gdk.EventMask)(256));
                    w60.Name = "GtkLabel20";
                    bindings["GtkLabel20"] = w60;
                    w41.LabelWidget = w60;
                    bindings["frame5"] = w41;
                    w40.Add(w41);
                    Gtk.Box.BoxChild w61 = ((Gtk.Box.BoxChild)(w40[w41]));
                    w61.Position = 0;
                    // Container child hbox1.Gtk.Box+BoxChild
                    Gtk.Frame w62 = new Gtk.Frame();
                    w62.ShadowType = ((Gtk.ShadowType)(0));
                    w62.LabelXalign = 0F;
                    w62.Events = ((Gdk.EventMask)(0));
                    w62.Name = "frame4";
                    // Container child frame4.Gtk.Container+ContainerChild
                    Gtk.Alignment w63 = new Gtk.Alignment(0F, 0F, 1F, 1F);
                    w63.LeftPadding = ((uint)(12));
                    w63.Events = ((Gdk.EventMask)(0));
                    w63.Name = "GtkAlignment13";
                    // Container child GtkAlignment13.Gtk.Container+ContainerChild
                    Gtk.VBox w64 = new Gtk.VBox();
                    w64.Events = ((Gdk.EventMask)(0));
                    w64.Name = "vbox2";
                    // Container child vbox2.Gtk.Box+BoxChild
                    Gtk.CheckButton w65 = new Gtk.CheckButton();
                    w65.Label = ".m3u";
                    w65.DrawIndicator = true;
                    w65.CanFocus = true;
                    w65.Events = ((Gdk.EventMask)(0));
                    w65.Name = "M3Ucheckbutton";
                    bindings["M3Ucheckbutton"] = w65;
                    w64.Add(w65);
                    Gtk.Box.BoxChild w66 = ((Gtk.Box.BoxChild)(w64[w65]));
                    w66.Position = 0;
                    w66.Expand = false;
                    w66.Fill = false;
                    // Container child vbox2.Gtk.Box+BoxChild
                    Gtk.CheckButton w67 = new Gtk.CheckButton();
                    w67.Label = ".pls";
                    w67.DrawIndicator = true;
                    w67.CanFocus = true;
                    w67.Events = ((Gdk.EventMask)(0));
                    w67.Name = "PLScheckbutton";
                    bindings["PLScheckbutton"] = w67;
                    w64.Add(w67);
                    Gtk.Box.BoxChild w68 = ((Gtk.Box.BoxChild)(w64[w67]));
                    w68.Position = 1;
                    w68.Expand = false;
                    w68.Fill = false;
                    // Container child vbox2.Gtk.Box+BoxChild
                    Gtk.CheckButton w69 = new Gtk.CheckButton();
                    w69.Label = ".smil";
                    w69.DrawIndicator = true;
                    w69.CanFocus = true;
                    w69.Events = ((Gdk.EventMask)(0));
                    w69.Name = "SMILcheckbutton";
                    bindings["SMILcheckbutton"] = w69;
                    w64.Add(w69);
                    Gtk.Box.BoxChild w70 = ((Gtk.Box.BoxChild)(w64[w69]));
                    w70.Position = 2;
                    w70.Expand = false;
                    w70.Fill = false;
                    bindings["vbox2"] = w64;
                    w63.Add(w64);
                    bindings["GtkAlignment13"] = w63;
                    w62.Add(w63);
                    Gtk.Label w73 = new Gtk.Label();
                    w73.LabelProp = "<b>Output formats</b>";
                    w73.UseMarkup = true;
                    w73.Events = ((Gdk.EventMask)(256));
                    w73.Name = "GtkLabel23";
                    bindings["GtkLabel23"] = w73;
                    w62.LabelWidget = w73;
                    bindings["frame4"] = w62;
                    w40.Add(w62);
                    Gtk.Box.BoxChild w74 = ((Gtk.Box.BoxChild)(w40[w62]));
                    w74.Position = 1;
                    w74.Expand = false;
                    w74.Fill = false;
                    bindings["hbox1"] = w40;
                    w2.Add(w40);
                    Gtk.Notebook.NotebookChild w75 = ((Gtk.Notebook.NotebookChild)(w2[w40]));
                    w75.Position = 2;
                    w75.TabExpand = false;
                    // Notebook tab
                    Gtk.Label w76 = new Gtk.Label();
                    w76.LabelProp = "Playlist settings";
                    w76.Events = ((Gdk.EventMask)(0));
                    w76.Name = "label2";
                    bindings["label2"] = w76;
                    w2.SetTabLabel(w40, w76);
                    bindings["notebook1"] = w2;
                    w1.Add(w2);
                    Gtk.Box.BoxChild w77 = ((Gtk.Box.BoxChild)(w1[w2]));
                    w77.Position = 0;
                    bindings["dialog_VBox"] = w1;
                    // Internal child MonoClient.Preferences.ActionArea
                    Gtk.HButtonBox w78 = cobj.ActionArea;
                    w78.LayoutStyle = ((Gtk.ButtonBoxStyle)(4));
                    w78.Spacing = 6;
                    w78.BorderWidth = ((uint)(5));
                    w78.Events = ((Gdk.EventMask)(256));
                    w78.Name = "MonoClient.Preferences_ActionArea";
                    // Container child MonoClient.Preferences_ActionArea.Gtk.ButtonBox+ButtonBoxChild
                    Gtk.Button w79 = new Gtk.Button();
                    w79.CanFocus = true;
                    w79.Events = ((Gdk.EventMask)(0));
                    w79.Name = "Closebutton";
                    w79.CanDefault = true;
                    // Container child Closebutton.Gtk.Container+ContainerChild
                    Gtk.Alignment w80 = new Gtk.Alignment(0.5F, 0.5F, 0F, 0F);
                    w80.Events = ((Gdk.EventMask)(0));
                    w80.Name = "GtkAlignment8";
                    // Container child GtkAlignment8.Gtk.Container+ContainerChild
                    Gtk.HBox w81 = new Gtk.HBox();
                    w81.Spacing = 2;
                    w81.Events = ((Gdk.EventMask)(0));
                    w81.Name = "GtkHBox13";
                    // Container child GtkHBox13.Gtk.Container+ContainerChild
                    Gtk.Image w82 = new Gtk.Image();
                    w82.Pixbuf = Gtk.IconTheme.Default.LoadIcon("gtk-close", 16, 0);
                    w82.Events = ((Gdk.EventMask)(0));
                    w82.Name = "image7";
                    bindings["image7"] = w82;
                    w81.Add(w82);
                    // Container child GtkHBox13.Gtk.Container+ContainerChild
                    Gtk.Label w84 = new Gtk.Label();
                    w84.LabelProp = "Close";
                    w84.Events = ((Gdk.EventMask)(0));
                    w84.Name = "GtkLabel19";
                    bindings["GtkLabel19"] = w84;
                    w81.Add(w84);
                    bindings["GtkHBox13"] = w81;
                    w80.Add(w81);
                    bindings["GtkAlignment8"] = w80;
                    w79.Add(w80);
                    bindings["Closebutton"] = w79;
                    cobj.AddActionWidget(w79, 0);
                    Gtk.ButtonBox.ButtonBoxChild w88 = ((Gtk.ButtonBox.ButtonBoxChild)(w78[w79]));
                    w88.Expand = false;
                    w88.Fill = false;
                    bindings["MonoClient.Preferences_ActionArea"] = w78;
                    cobj.DefaultWidth = 400;
                    cobj.DefaultHeight = 286;
                    bindings["MonoClient.Preferences"] = cobj;
                    w10.Show();
                    w12.Show();
                    w9.Show();
                    w8.Show();
                    w7.Show();
                    w17.Show();
                    w19.Show();
                    w21.Show();
                    w24.Show();
                    w23.Show();
                    w27.Show();
                    w6.Show();
                    w5.Show();
                    w31.Show();
                    w4.Show();
                    w33.Show();
                    w3.Show();
                    w36.Show();
                    w37.Show();
                    w39.Show();
                    w44.Show();
                    w46.Show();
                    w48.Show();
                    w50.Show();
                    w52.Show();
                    w54.Show();
                    w56.Show();
                    w43.Show();
                    w42.Show();
                    w60.Show();
                    w41.Show();
                    w65.Show();
                    w67.Show();
                    w69.Show();
                    w64.Show();
                    w63.Show();
                    w73.Show();
                    w62.Show();
                    w40.Show();
                    w76.Show();
                    w2.Show();
                    w1.Show();
                    w82.Show();
                    w84.Show();
                    w81.Show();
                    w80.Show();
                    w79.Show();
                    w78.Show();
                    cobj.Show();
                    w7.Clicked += ((System.EventHandler)(System.Delegate.CreateDelegate(typeof(System.EventHandler), cobj, "OnLoginButtonClicked")));
                    w27.Changed += ((System.EventHandler)(System.Delegate.CreateDelegate(typeof(System.EventHandler), cobj, "OnUserNameEntryChanged")));
                }
                else {
                    if ((id == "MonoClient.About")) {
                        Gtk.Dialog cobj = ((Gtk.Dialog)(obj));
                        // Widget MonoClient.About
                        cobj.Title = "About TheLastRipper";
                        cobj.Icon = Gtk.IconTheme.Default.LoadIcon("gtk-about", 16, 0);
                        cobj.WindowPosition = ((Gtk.WindowPosition)(4));
                        cobj.Modal = true;
                        cobj.HasSeparator = false;
                        cobj.Resizable = false;
                        cobj.AllowGrow = false;
                        cobj.Events = ((Gdk.EventMask)(256));
                        cobj.Name = "MonoClient.About";
                        // Internal child MonoClient.About.VBox
                        Gtk.VBox w1 = cobj.VBox;
                        w1.BorderWidth = ((uint)(2));
                        w1.Events = ((Gdk.EventMask)(256));
                        w1.Name = "dialog_VBox";
                        // Container child dialog_VBox.Gtk.Box+BoxChild
                        Gtk.Image w2 = new Gtk.Image();
                        w2.Pixbuf = Gdk.Pixbuf.LoadFromResource("AboutBoxLinux.png");
                        w2.Events = ((Gdk.EventMask)(0));
                        w2.Name = "image15";
                        bindings["image15"] = w2;
                        w1.Add(w2);
                        Gtk.Box.BoxChild w3 = ((Gtk.Box.BoxChild)(w1[w2]));
                        w3.Position = 0;
                        bindings["dialog_VBox"] = w1;
                        // Internal child MonoClient.About.ActionArea
                        Gtk.HButtonBox w4 = cobj.ActionArea;
                        w4.LayoutStyle = ((Gtk.ButtonBoxStyle)(4));
                        w4.Spacing = 6;
                        w4.BorderWidth = ((uint)(5));
                        w4.Events = ((Gdk.EventMask)(256));
                        w4.Name = "MonoClient.About_ActionArea";
                        // Container child MonoClient.About_ActionArea.Gtk.ButtonBox+ButtonBoxChild
                        Gtk.Button w5 = new Gtk.Button();
                        w5.CanFocus = true;
                        w5.Events = ((Gdk.EventMask)(0));
                        w5.Name = "CloseButton";
                        w5.CanDefault = true;
                        // Container child CloseButton.Gtk.Container+ContainerChild
                        Gtk.Alignment w6 = new Gtk.Alignment(0.5F, 0.5F, 0F, 0F);
                        w6.Events = ((Gdk.EventMask)(0));
                        w6.Name = "GtkAlignment";
                        // Container child GtkAlignment.Gtk.Container+ContainerChild
                        Gtk.HBox w7 = new Gtk.HBox();
                        w7.Spacing = 2;
                        w7.Events = ((Gdk.EventMask)(0));
                        w7.Name = "GtkHBox";
                        // Container child GtkHBox.Gtk.Container+ContainerChild
                        Gtk.Image w8 = new Gtk.Image();
                        w8.Pixbuf = Gtk.IconTheme.Default.LoadIcon("gtk-close", 16, 0);
                        w8.Events = ((Gdk.EventMask)(0));
                        w8.Name = "image1";
                        bindings["image1"] = w8;
                        w7.Add(w8);
                        // Container child GtkHBox.Gtk.Container+ContainerChild
                        Gtk.Label w10 = new Gtk.Label();
                        w10.LabelProp = "Close";
                        w10.Events = ((Gdk.EventMask)(0));
                        w10.Name = "GtkLabel";
                        bindings["GtkLabel"] = w10;
                        w7.Add(w10);
                        bindings["GtkHBox"] = w7;
                        w6.Add(w7);
                        bindings["GtkAlignment"] = w6;
                        w5.Add(w6);
                        bindings["CloseButton"] = w5;
                        cobj.AddActionWidget(w5, 0);
                        Gtk.ButtonBox.ButtonBoxChild w14 = ((Gtk.ButtonBox.ButtonBoxChild)(w4[w5]));
                        w14.Expand = false;
                        w14.Fill = false;
                        bindings["MonoClient.About_ActionArea"] = w4;
                        cobj.DefaultWidth = 262;
                        cobj.DefaultHeight = 322;
                        bindings["MonoClient.About"] = cobj;
                        w2.Show();
                        w1.Show();
                        w8.Show();
                        w10.Show();
                        w7.Show();
                        w6.Show();
                        w5.Show();
                        w4.Show();
                        cobj.Show();
                        w5.Clicked += ((System.EventHandler)(System.Delegate.CreateDelegate(typeof(System.EventHandler), cobj, "OnCloseButtonClicked")));
                    }
                }
            }
            System.Reflection.FieldInfo[] fields = obj.GetType().GetFields(((System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic) | System.Reflection.BindingFlags.Instance));
            for (int n = 0; (n < fields.Length); n = (n + 1)) {
                System.Reflection.FieldInfo field = fields[n];
                object widget = bindings[field.Name];
                if (((widget != null) && field.FieldType.IsInstanceOfType(widget))) {
                    field.SetValue(obj, widget);
                }
            }
        }
    }
    
    internal class ActionGroups {
        
        public static Gtk.ActionGroup GetActionGroup(System.Type type) {
            return Stetic.ActionGroups.GetActionGroup(type.FullName);
        }
        
        public static Gtk.ActionGroup GetActionGroup(string name) {
            return null;
        }
    }
}
